name: dockercompose13207892413705527905
services:
  diplom2:
    build:
      context: C:\Users\MaRdIkUs\Diplom2
      dockerfile: Diplom2/Dockerfile
    depends_on:
      migrations:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      GOOGLE_APPLICATION_CREDENTIALS: /secrets/s3/s3.json
    image: diplom2
    networks:
      keycloaknet: null
      mynet: null
    ports:
      - mode: ingress
        target: 8080
        published: "8085"
        protocol: tcp
      - mode: ingress
        target: 8081
        published: "8086"
        protocol: tcp
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\MaRdIkUs\Downloads\diplom-457710-66215b408ef3.json
        target: /secrets/s3/s3.json
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\MaRdIkUs\certs\ip-cert.crt
        target: /etc/ssl/certs/keycloak.crt
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\MaRdIkUs\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\MaRdIkUs\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\MaRdIkUs\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\MaRdIkUs\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  migrations:
    build:
      context: C:\Users\MaRdIkUs\Diplom2
      dockerfile: Diplom2/migration-Dockerfile
    depends_on:
      mysql:
        condition: service_started
        required: true
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: /secrets/s3/s3.json
    image: migration
    networks:
      mynet: null
    volumes:
      - type: bind
        source: C:\Users\MaRdIkUs\Downloads\diplom-457710-66215b408ef3.json
        target: /secrets/s3/s3.json
        bind:
          create_host_path: true
  mysql:
    environment:
      MYSQL_DATABASE: DB1
      MYSQL_PASSWORD: example1Commerce
      MYSQL_ROOT_PASSWORD: strong!1Pass
      MYSQL_USER: DBUser
    healthcheck:
      test:
        - CMD
        - mysqladmin
        - ping
        - -h
        - localhost
        - --silent
      interval: 30s
      retries: 5
    image: mysql
    networks:
      mynet: null
    ports:
      - mode: ingress
        target: 3306
        published: "3306"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: mysql
        target: /var/lib/mysql
        volume: {}
  nginx:
    depends_on:
      diplom2:
        condition: service_started
        required: true
    image: nginx
    networks:
      keycloaknet: null
      mynet: null
    ports:
      - mode: ingress
        target: 443
        published: "443"
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\MaRdIkUs\Diplom2\Diplom2\nginx.conf
        target: /etc/nginx/conf.d/default.conf
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\MaRdIkUs\Diplom2\Diplom2\nginx.main.conf
        target: /etc/nginx/nginx.conf
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\MaRdIkUs\certs
        target: /etc/ssl/private
        bind:
          create_host_path: true
  qdrant:
    image: qdrant/qdrant
    networks:
      mynet: null
    ports:
      - mode: ingress
        target: 6333
        published: "6333"
        protocol: tcp
      - mode: ingress
        target: 6334
        published: "6334"
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\MaRdIkUs\qdrant_storage
        target: /qdrant/storage
        bind:
          selinux: z
          create_host_path: true
networks:
  keycloaknet:
    name: keycloaknet
    external: true
  mynet:
    name: dockercompose13207892413705527905_mynet
volumes:
  mysql:
    name: dockercompose13207892413705527905_mysql